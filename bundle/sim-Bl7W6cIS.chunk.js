import{ad as e,U as t,m as a,a as n,b as s,K as i,G as o,r,R as l,I as d,T as g,f as c,J as p,g as h}from"./preset_utils-C08y0zZJ.chunk.js";import{R as u}from"./suggest_reforges_action-B1NagpDI.chunk.js";import{ga as m,S,a as f,f as I,b as y,c as v,G as P,bS as R,gb as w,C as T,m as k,H as A,R as O,g as H,D as M,I as b,h as C,i as E,U as G,j as F,F as D,k as B,l as W,E as x}from"./detailed_results-l_PUj7md.chunk.js";import{S as j,a as U}from"./inputs-BEM3Uiaw.chunk.js";const V=e({fieldName:"syncType",label:"Swing Sync Setting",labelTooltip:"Choose your sync option Perfect\n\t\t<ul>\n\t\t\t<li><div>None: No Sync used for mismatched weapon speeds</div></li>\n\t\t\t<li><div>Sync: Makes your weapons always attack at the same time, for match weapon speeds</div></li>\n\t\t</ul>",values:[{name:"None",value:m.WarriorNoSync},{name:"Sync",value:m.WarriorSyncMainhandOffhandSwings}]}),L=t({fieldName:"useItemSwapBonusStats",label:"Assume Prepull Mastery Elixir",labelTooltip:"Enabling this assumes you are using a Mastery Elixir during prepull.",getValue:e=>e.getSpecOptions().useItemSwapBonusStats,setValue:(e,t,a)=>{const n=t.getSpecOptions();n.useItemSwapBonusStats=a;const s=a?(new S).withStat(f.StatMasteryRating,225+(t.hasProfession(I.Alchemy)?40:0)):new S;t.itemSwapSettings.setBonusStats(e,s),t.setSpecOptions(e,n)}}),N={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:2457}}},doAtValue:{const:{val:"-10s"}}},{action:{move:{rangeFromTarget:{const:{val:"9"}}}},doAtValue:{const:{val:"-5s"}}},{action:{castSpell:{spellId:{spellId:6673}}},doAtValue:{const:{val:"-3"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1.5"}}},{action:{castSpell:{spellId:{spellId:64382}}},doAtValue:{const:{val:"-1.5"}}},{action:{castSpell:{spellId:{spellId:100}}},doAtValue:{const:{val:"0"}}}],priorityList:[{action:{autocastOtherCooldowns:{}}},{action:{condition:{or:{vals:[{isExecutePhase:{threshold:"E20"}},{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"25"}}}}]}},castSpell:{spellId:{otherId:"OtherActionPotion"}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:114206,tag:-1}}}}},castSpell:{spellId:{spellId:114206}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:12880}}}}},castSpell:{spellId:{spellId:18499}}}},{action:{condition:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:86346}}},castSpell:{spellId:{spellId:6544}}}},{action:{castSpell:{spellId:{spellId:23881}}}},{action:{condition:{not:{val:{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:86346}}}}},castSpell:{spellId:{spellId:86346}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"3"}}}},castSpell:{spellId:{spellId:107570,tag:1}}}},{action:{castSpell:{spellId:{spellId:5308}}}},{action:{castSpell:{spellId:{spellId:85288,tag:1}}}},{action:{condition:{cmp:{op:"OpGt",lhs:{numberTargets:{}},rhs:{const:{val:"1"}}}},castSpell:{spellId:{spellId:1680,tag:1}}}},{action:{condition:{auraIsActive:{auraId:{spellId:46916}}},castSpell:{spellId:{spellId:100130}}}},{action:{condition:{and:{vals:[{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:86346}}},{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"80"}}}}]}},castSpell:{spellId:{spellId:78}}}},{action:{condition:{and:{vals:[{not:{val:{isExecutePhase:{threshold:"E20"}}}},{cmp:{op:"OpGe",lhs:{currentRage:{}},rhs:{const:{val:"60"}}}}]}},castSpell:{spellId:{spellId:78}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLt",lhs:{currentRage:{}},rhs:{const:{val:"80"}}}},{cmp:{op:"OpGe",lhs:{autoTimeToNext:{}},rhs:{const:{val:"2s"}}}},{spellIsReady:{spellId:{spellId:100}}}]}},move:{rangeFromTarget:{const:{val:"9"}}}}},{action:{castSpell:{spellId:{spellId:100}}}},{action:{condition:{and:{vals:[{not:{val:{spellCanCast:{spellId:{spellId:100}}}}},{not:{val:{unitIsMoving:{}}}},{cmp:{op:"OpGe",lhs:{currentTime:{}},rhs:{const:{val:"1.5"}}}}]}},castSpell:{spellId:{spellId:46924}}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentRage:{}},rhs:{const:{val:"80"}}}},castSpell:{spellId:{spellId:6673}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:64382}}}}]},q={items:[{id:87192,gems:[76886,76575],reforging:137},{id:86967,reforging:168},{id:86986,enchant:4803,gems:[76631]},{id:87026,enchant:4424},{id:87193,enchant:4419,gems:[76631,76631],reforging:154},{id:90506,enchant:4415,gems:[76631],reforging:166},{id:87194,enchant:4432,gems:[76631],reforging:161,tinker:4898},{id:87186,enchant:4223,gems:[76575,76631],reforging:140},{id:87195,enchant:4823,gems:[76631],reforging:166},{id:87015,enchant:4429,gems:[76631],reforging:168},{id:87158,reforging:139},{id:86957,reforging:152},{id:87072,reforging:152},{id:79327},{id:87173,enchant:4444,gems:[89881],reforging:137},{id:86987,enchant:4444,gems:[76575],reforging:166}]},_={items:[{id:87192,gems:[76886,76575],reforging:137},{id:86967},{id:86986,enchant:4803,gems:[76631],reforging:168},{id:87026,enchant:4424,reforging:158},{id:87193,enchant:4419,gems:[76631,76631],reforging:154},{id:90506,enchant:4415,gems:[76631],reforging:166},{id:87194,enchant:4432,gems:[76631],tinker:4898},{id:87186,enchant:4223,gems:[76575,76631]},{id:87195,enchant:4823,gems:[76631],reforging:166},{id:87015,enchant:4429,gems:[76631],reforging:168},{id:87158,reforging:140},{id:86957,reforging:152},{id:87072,reforging:152},{id:79327},{id:87176,enchant:4444,gems:[89881]},{id:87176,enchant:4444,gems:[0],reforging:165}]},Y={items:[{id:77539,gems:[76886,77545,77541]},{id:90592,reforging:165},{id:89345,enchant:4803,gems:[76631],reforging:139},{id:90580,enchant:4424,reforging:153},{id:82975,enchant:4419,gems:[76631,76575],reforging:168},{id:88879,enchant:4415,gems:[76631]},{id:82976,enchant:4432,gems:[76631,76631],tinker:4898},{id:84950,enchant:4223,gems:[76575,76631],reforging:165},{id:84507,enchant:4823,gems:[76631,76631],reforging:153},{id:84810,enchant:4429,gems:[76631],reforging:168},{id:90862,reforging:152},{id:81251,reforging:158},{id:81138},{id:79327},{id:87542,enchant:4444,reforging:139},{id:87542,enchant:4444,reforging:139}]},J={onLoad:e=>{i([{condition:e=>e.getEquippedItem(k.ItemSlotMainHand)?.item.handType===A.HandTypeTwoHand,message:"Check your gear: You have a two-handed weapon equipped, but the selected option is for one-handed weapons."}],e)}},K={onLoad:e=>{i([{condition:e=>e.getEquippedItem(k.ItemSlotMainHand)?.item.handType===A.HandTypeOneHand,message:"Check your gear: You have a one-handed weapon equipped, but the selected option is for two-handed weapons."}],e)}},z=a("Preraid - SMF",{items:[{id:77539,gems:[76886,77545,77541]},{id:90592,reforging:168},{id:89345,enchant:4803,gems:[76631],reforging:146},{id:90580,enchant:4424,reforging:153},{id:82975,enchant:4419,gems:[76631,76575],reforging:165},{id:88879,enchant:4415,gems:[76631],reforging:144},{id:82976,enchant:4432,gems:[76631,76631],reforging:168,tinker:4898},{id:84950,enchant:4223,gems:[76575,76631],reforging:165},{id:84507,enchant:4823,gems:[76631,76631],reforging:153},{id:84810,enchant:4429,gems:[76631],reforging:168},{id:90862,reforging:151},{id:81251},{id:81138},{id:79327},{id:87545,enchant:4444,reforging:168},{id:87545,enchant:4444,reforging:168}]},J),Q=a("Preraid - TG",Y,K),X=a("P1 - SMF",q,J),Z=a("P1 - TG",_,K),$=n("Default",N),ee=s("P1 - SMF",S.fromMap({[f.StatStrength]:1,[f.StatAgility]:.06,[f.StatAttackPower]:.45,[f.StatExpertiseRating]:1.19,[f.StatHitRating]:1.37,[f.StatCritRating]:.94,[f.StatHasteRating]:.41,[f.StatMasteryRating]:.59},{[y.PseudoStatMainHandDps]:2.15,[y.PseudoStatOffHandDps]:1.31}),J),te=s("P1 - TG",S.fromMap({[f.StatStrength]:1,[f.StatAgility]:.07,[f.StatAttackPower]:.45,[f.StatExpertiseRating]:1.42,[f.StatHitRating]:1.62,[f.StatCritRating]:1.07,[f.StatHasteRating]:.41,[f.StatMasteryRating]:.7},{[y.PseudoStatMainHandDps]:2.59,[y.PseudoStatOffHandDps]:1.11}),K),ae={name:"SMF",data:v.create({talentsString:"133333",glyphs:P.create({major1:R.GlyphOfBullRush,major2:R.GlyphOfDeathFromAbove,major3:R.GlyphOfUnendingRage})}),...J},ne={name:"TG",data:v.create({talentsString:"133133",glyphs:P.create({major1:R.GlyphOfBullRush,major2:R.GlyphOfDeathFromAbove,major3:R.GlyphOfUnendingRage})}),...K},se=w.create({classOptions:{startingRage:0},syncType:0}),ie=T.create({flaskId:76088,foodId:74646,potId:76095,prepotId:76095}),oe={profession1:I.Engineering,profession2:I.Blacksmithing,distanceFromTarget:5},re=o("P1 - SMF",{gear:X,talents:ae,epWeights:ee}),le=o("P1 - TG",{gear:Z,talents:ne,epWeights:te}),de=r(H.SpecFuryWarrior,{cssClass:"fury-warrior-sim-ui",cssScheme:F.getCssClass(F.Warrior),knownIssues:[],epStats:[f.StatStrength,f.StatAgility,f.StatAttackPower,f.StatExpertiseRating,f.StatHitRating,f.StatCritRating,f.StatHasteRating,f.StatMasteryRating],epPseudoStats:[y.PseudoStatMainHandDps,y.PseudoStatOffHandDps],epReferenceStat:f.StatStrength,displayStats:G.createDisplayStatArray([f.StatHealth,f.StatStamina,f.StatStrength,f.StatAgility,f.StatAttackPower,f.StatExpertiseRating,f.StatMasteryRating],[y.PseudoStatPhysicalHitPercent,y.PseudoStatPhysicalCritPercent,y.PseudoStatMeleeHastePercent]),defaults:{gear:Z.gear,epWeights:te.epWeights,statCaps:(new S).withStat(f.StatExpertiseRating,30*x),softCapBreakpoints:[B.fromPseudoStat(y.PseudoStatPhysicalHitPercent,{breakpoints:[7.5,27],capType:W.TypeSoftCap,postCapEPs:[0,0]})],other:oe,consumables:ie,talents:ne.data,specOptions:se,raidBuffs:E.create({legacyOfTheEmperor:!0,legacyOfTheWhiteTiger:!0,darkIntent:!0,trueshotAura:!0,unleashedRage:!0,moonkinAura:!0,blessingOfMight:!0,bloodlust:!0,skullBannerCount:2,stormlashTotemCount:4}),partyBuffs:C.create({}),individualBuffs:b.create({}),debuffs:M.create({physicalVulnerability:!0,weakenedArmor:!0,masterPoisoner:!0})},playerIconInputs:[],includeBuffDebuffInputs:[p],excludeBuffDebuffInputs:[],otherInputs:{inputs:[V,j(),U(),l,d,g,c,L]},itemSwapSlots:[k.ItemSlotHead,k.ItemSlotNeck,k.ItemSlotShoulder,k.ItemSlotBack,k.ItemSlotChest,k.ItemSlotWrist,k.ItemSlotHands,k.ItemSlotWaist,k.ItemSlotLegs,k.ItemSlotFeet,k.ItemSlotFinger1,k.ItemSlotFinger2,k.ItemSlotTrinket1,k.ItemSlotTrinket2,k.ItemSlotMainHand,k.ItemSlotOffHand],encounterPicker:{showExecuteProportion:!0},presets:{epWeights:[ee,te,ee,te],talents:[ae,ne],rotations:[$],gear:[z,Q,X,Z],builds:[re,le]},autoRotation:e=>$.rotation.rotation,raidSimPresets:[{spec:H.SpecFuryWarrior,talents:ae.data,specOptions:se,consumables:ie,defaultFactionRaces:{[D.Unknown]:O.RaceUnknown,[D.Alliance]:O.RaceWorgen,[D.Horde]:O.RaceTroll},defaultGear:{[D.Unknown]:{},[D.Alliance]:{1:X.gear,2:Z.gear,3:z.gear,4:Q.gear},[D.Horde]:{1:X.gear,2:Z.gear,3:z.gear,4:Q.gear}},otherDefaults:oe}]});class ge extends h{constructor(e,t){super(e,t,de),t.sim.waitForInit().then((()=>{new u(this,{getEPDefaults:e=>{e.getGear().getEquippedItems().some((e=>(e?.item.phase||0)>=3));return te.epWeights}})}))}}export{ge as F};
