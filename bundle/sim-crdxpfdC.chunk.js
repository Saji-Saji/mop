import{m as e,a as t,b as a,r as s,f as n,I as i,C as o,a3 as l,a4 as r,a5 as c,a2 as d,a6 as p,a7 as g,a8 as u,a9 as I,aa as h,J as m,M as f,ab as S,g as v}from"./preset_utils-C08y0zZJ.chunk.js";import{R as P}from"./suggest_reforges_action-B1NagpDI.chunk.js";import{S as y,a as A,b as O,c as R,G as b,ba as C,bb as k,bc as H,C as w,R as E,g as D,m as M,D as T,I as L,h as x,i as B,U as F,j as G,F as j,k as U,l as W,as as V,E as _}from"./detailed_results-l_PUj7md.chunk.js";import{S as K,L as N,A as q}from"./inputs-Bx1Y4Ff3.chunk.js";const J={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}},{action:{activateAura:{auraId:{spellId:1784}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{castSpell:{spellId:{spellId:2825,tag:-1}}}},{action:{condition:{not:{val:{dotIsActive:{spellId:{spellId:1943}}}}},castSpell:{spellId:{spellId:1943}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:1943}}},rhs:{const:{val:"2"}}}},{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"4"}}}}]}},castSpell:{spellId:{spellId:1943}}}},{action:{condition:{not:{val:{auraIsActive:{auraId:{spellId:5171}}}}},castSpell:{spellId:{spellId:5171}}}},{action:{condition:{or:{vals:[{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:79140}}},{cmp:{op:"OpLe",lhs:{remainingTime:{}},rhs:{const:{val:"30s"}}}}]}},autocastOtherCooldowns:{}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:5171}}},{dotIsActive:{spellId:{spellId:1943}}},{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}}]}},castSpell:{spellId:{spellId:79140}}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:5171}}},{dotIsActive:{spellId:{spellId:1943}}}]}},castSpell:{spellId:{spellId:121471}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},castSpell:{spellId:{spellId:32645}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpEq",lhs:{currentComboPoints:{}},rhs:{const:{val:"0"}}}},{not:{val:{auraIsActive:{auraId:{spellId:1784}}}}},{auraIsActive:{auraId:{spellId:5171}}}]}},castSpell:{spellId:{spellId:137619}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpLe",lhs:{currentComboPoints:{}},rhs:{const:{val:"4"}}}},{and:{vals:[{auraIsKnown:{auraId:{spellId:114015}}},{cmp:{op:"OpLe",lhs:{auraNumStacks:{auraId:{spellId:114015}}},rhs:{const:{val:"4"}}}}]}}]}},{or:{vals:[{isExecutePhase:{threshold:"E35"}},{auraIsActive:{auraId:{spellId:121153}}}]}}]}},castSpell:{spellId:{spellId:111240}}}},{action:{condition:{and:{vals:[{auraIsActive:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:79140}}},{gcdIsReady:{}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"60"}}}},{cmp:{op:"OpLe",lhs:{currentComboPoints:{}},rhs:{const:{val:"4"}}}},{not:{val:{auraIsActive:{auraId:{spellId:121153}}}}}]}},castSpell:{spellId:{spellId:1856}}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpLe",lhs:{currentComboPoints:{}},rhs:{const:{val:"4"}}}},{and:{vals:[{auraIsKnown:{auraId:{spellId:114015}}},{cmp:{op:"OpLe",lhs:{auraNumStacks:{auraId:{spellId:114015}}},rhs:{const:{val:"4"}}}}]}}]}},{not:{val:{isExecutePhase:{threshold:"E35"}}}}]}},castSpell:{spellId:{spellId:1329}}}},{action:{condition:{not:{val:{spellIsReady:{spellId:{spellId:1856}}}}},castSpell:{spellId:{spellId:14185}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:57934}}}}]},z={items:[{id:87070,gems:[76884,76692],reforging:147},{id:87045,reforging:161},{id:87033,enchant:4914,gems:[76692]},{id:87044,enchant:4424,reforging:161},{id:87058,enchant:4419,gems:[76692,76670],reforging:147},{id:89935,enchant:4875,gems:[0],reforging:147},{id:85828,enchant:4433,gems:[76680,0],reforging:144},{id:87022,gems:[76670,76680,76692],reforging:154},{id:87013,enchant:4822,gems:[76692,76680],reforging:147},{id:90442,enchant:4428,reforging:154},{id:90861,reforging:140},{id:89932,reforging:145},{id:87057},{id:79328},{id:87012,enchant:4444,reforging:154},{id:87012,enchant:4444,reforging:154}]},Q={items:[{id:87126,gems:[76884,76680],reforging:160},{id:89917,reforging:153},{id:87128,enchant:4914,gems:[76680],reforging:161},{id:86963,enchant:4421,reforging:144},{id:87124,enchant:4419,gems:[76670,76670],reforging:144},{id:86954,enchant:4875,gems:[0],reforging:147},{id:87125,enchant:4433,gems:[0],reforging:147},{id:87022,gems:[76670,76680,76692],reforging:161},{id:89943,enchant:4822,gems:[76692,76680],reforging:138},{id:86984,enchant:4428,gems:[76670],reforging:160},{id:86974,reforging:160},{id:87144,reforging:147},{id:87057},{id:87167},{id:87166,enchant:4444,gems:[89873],reforging:160},{id:87166,enchant:4444,gems:[0],reforging:160}]},X=e("P1 Preraid",{items:[{id:81283,gems:[76884,76692],reforging:153},{id:89065,reforging:147},{id:81071,enchant:4914,gems:[76692],reforging:140},{id:81282,enchant:4421,reforging:147},{id:85823,enchant:4419,gems:[76670,76670],reforging:146},{id:81090,enchant:4875,gems:[0],reforging:154},{id:85824,enchant:4433,gems:[76692,0],reforging:146},{id:81135,gems:[76692],reforging:161},{id:82851,enchant:4822,gems:[76670],reforging:154},{id:81688,enchant:4428,gems:[76670],reforging:144},{id:90861,reforging:147},{id:81186,reforging:154},{id:81267,reforging:147},{id:79328},{id:82813,enchant:4444,reforging:139},{id:89393,enchant:4444,reforging:151}]}),Y=e("P1 MSV",z),Z=e("P1 T14",Q),$=t("Assassination",J),ee=a("Asn",y.fromMap({[A.StatAgility]:1,[A.StatCritRating]:.35,[A.StatHitRating]:1.2,[A.StatHasteRating]:.37,[A.StatMasteryRating]:.41,[A.StatExpertiseRating]:.39},{[O.PseudoStatMainHandDps]:1.37,[O.PseudoStatOffHandDps]:.3})),te={name:"Assassination",data:R.create({talentsString:"321232",glyphs:b.create({major1:C.GlyphOfVendetta})})},ae=k.create({classOptions:{lethalPoison:H.DeadlyPoison,applyPoisonsManually:!1,startingOverkillDuration:20,vanishBreakTime:.1}}),se=w.create({flaskId:76084,foodId:74648,potId:76089,prepotId:76089}),ne={distanceFromTarget:5},ie=s(D.SpecAssassinationRogue,{cssClass:"assassination-rogue-sim-ui",cssScheme:G.getCssClass(G.Rogue),knownIssues:[],epStats:[A.StatAgility,A.StatHitRating,A.StatCritRating,A.StatHasteRating,A.StatMasteryRating,A.StatExpertiseRating],epPseudoStats:[O.PseudoStatMainHandDps,O.PseudoStatOffHandDps],epReferenceStat:A.StatAgility,displayStats:F.createDisplayStatArray([A.StatHealth,A.StatStamina,A.StatAgility,A.StatStrength,A.StatAttackPower,A.StatMasteryRating,A.StatExpertiseRating],[O.PseudoStatPhysicalHitPercent,O.PseudoStatPhysicalCritPercent,O.PseudoStatMeleeHastePercent]),defaults:{gear:Y.gear,epWeights:ee.epWeights,statCaps:(new y).withStat(A.StatExpertiseRating,30*_),softCapBreakpoints:[U.fromPseudoStat(O.PseudoStatPhysicalHitPercent,{breakpoints:[7.5,26.5],capType:W.TypeSoftCap,postCapEPs:[.21*V,0]})],other:ne,consumables:se,talents:te.data,specOptions:ae,raidBuffs:B.create({blessingOfKings:!0,trueshotAura:!0,swiftbladesCunning:!0,legacyOfTheWhiteTiger:!0,blessingOfMight:!0,bloodlust:!0}),partyBuffs:x.create({}),individualBuffs:L.create({}),debuffs:T.create({weakenedArmor:!0,physicalVulnerability:!0,masterPoisoner:!0})},playerInputs:{inputs:[q()]},playerIconInputs:[N()],includeBuffDebuffInputs:[o,l,r,c,d,p,g,u,I,h,m,f,S],excludeBuffDebuffInputs:[],otherInputs:{inputs:[n,i,K()]},itemSwapSlots:[M.ItemSlotHead,M.ItemSlotNeck,M.ItemSlotShoulder,M.ItemSlotBack,M.ItemSlotChest,M.ItemSlotWrist,M.ItemSlotHands,M.ItemSlotWaist,M.ItemSlotLegs,M.ItemSlotFeet,M.ItemSlotFinger1,M.ItemSlotFinger2,M.ItemSlotTrinket1,M.ItemSlotTrinket2,M.ItemSlotMainHand,M.ItemSlotOffHand],encounterPicker:{showExecuteProportion:!0},presets:{epWeights:[ee],talents:[te],rotations:[$],gear:[X,Y,Z]},autoRotation:e=>{e.sim.encounter.targets.length;return $.rotation.rotation},raidSimPresets:[{spec:D.SpecAssassinationRogue,talents:te.data,specOptions:ae,consumables:se,defaultFactionRaces:{[j.Unknown]:E.RaceUnknown,[j.Alliance]:E.RaceHuman,[j.Horde]:E.RaceOrc},defaultGear:{[j.Unknown]:{},[j.Alliance]:{1:Y.gear},[j.Horde]:{1:Y.gear}},otherDefaults:ne}]});class oe extends v{constructor(e,t){super(e,t,ie),t.sim.waitForInit().then((()=>{new P(this,{})})),this.player.changeEmitter.on((e=>{const t=this.player.getSpecOptions();t.classOptions.applyPoisonsManually||(t.classOptions.lethalPoison=H.DeadlyPoison),this.player.setSpecOptions(e,t)})),this.sim.encounter.changeEmitter.on((e=>{const t=this.player.getSpecOptions();t.classOptions.applyPoisonsManually||(t.classOptions.lethalPoison=H.DeadlyPoison),this.player.setSpecOptions(e,t)}))}}export{oe as A};
