import{m as e,a as t,b as a,r as s,f as n,I as i,C as o,a3 as l,a4 as r,a5 as p,a2 as c,a6 as d,a7 as g,a8 as m,a9 as u,aa as h,J as S,M as I,ab as f,g as y}from"./preset_utils-C08y0zZJ.chunk.js";import{R as P}from"./suggest_reforges_action-B1NagpDI.chunk.js";import{S as v,a as O,b as R,c as b,G as C,bd as A,bc as T,C as k,R as H,g as w,m as M,D,I as E,h as L,i as W,U as x,j as G,F as B,k as F,l as j,as as U,E as V,be as q}from"./detailed_results-l_PUj7md.chunk.js";import{S as _,L as K,A as N}from"./inputs-Bx1Y4Ff3.chunk.js";const J={type:"TypeAPL",prepullActions:[{action:{castSpell:{spellId:{spellId:13877}}},doAtValue:{const:{val:"-1s"}},hide:!0},{action:{activateAura:{auraId:{spellId:1784}}},doAtValue:{const:{val:"-1s"}}},{action:{castSpell:{spellId:{otherId:"OtherActionPotion"}}},doAtValue:{const:{val:"-1s"}}}],priorityList:[{action:{castSpell:{spellId:{spellId:2825,tag:-1}}}},{action:{condition:{cmp:{op:"OpEq",lhs:{currentComboPoints:{}},rhs:{const:{val:"0"}}}},castSpell:{spellId:{spellId:137619}}}},{action:{condition:{or:{vals:[{and:{vals:[{cmp:{op:"OpLe",lhs:{auraRemainingTime:{auraId:{spellId:5171}}},rhs:{const:{val:"4"}}}},{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}}]}},{not:{val:{auraIsActive:{auraId:{spellId:5171}}}}}]}},castSpell:{spellId:{spellId:5171}}}},{action:{condition:{or:{vals:[{auraIsActive:{auraId:{spellId:51690}}},{auraIsActive:{auraId:{spellId:13750}}}]}},autocastOtherCooldowns:{}}},{action:{condition:{and:{vals:[{auraIsActive:{auraId:{spellId:5171}}},{or:{vals:[{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"40"}}}}]}}]}},castSpell:{spellId:{spellId:51690}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{spellTimeToReady:{spellId:{spellId:51690}}},rhs:{const:{val:"15"}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:13750}}},{castSpell:{spellId:{spellId:121471}}}]}}},{action:{condition:{and:{vals:[{or:{vals:[{cmp:{op:"OpLe",lhs:{currentComboPoints:{}},rhs:{const:{val:"4"}}}},{and:{vals:[{auraIsKnown:{auraId:{spellId:114015}}},{cmp:{op:"OpLe",lhs:{auraNumStacks:{auraId:{spellId:114015}}},rhs:{const:{val:"4"}}}}]}}]}},{cmp:{op:"OpLe",lhs:{auraRemainingTime:{sourceUnit:{type:"CurrentTarget"},auraId:{spellId:84617}}},rhs:{const:{val:"3"}}}}]}},castSpell:{spellId:{spellId:84617}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},{cmp:{op:"OpLe",lhs:{dotRemainingTime:{spellId:{spellId:1943}}},rhs:{const:{val:"2s"}}}}]}},castSpell:{spellId:{spellId:1943}}}},{action:{condition:{cmp:{op:"OpGe",lhs:{currentComboPoints:{}},rhs:{const:{val:"5"}}}},castSpell:{spellId:{spellId:2098}}}},{action:{condition:{and:{vals:[{cmp:{op:"OpLe",lhs:{currentEnergy:{}},rhs:{const:{val:"50"}}}},{cmp:{op:"OpLe",lhs:{currentComboPoints:{}},rhs:{const:{val:"3"}}}}]}},strictSequence:{actions:[{castSpell:{spellId:{spellId:1856}}},{castSpell:{spellId:{spellId:8676}}}]}}},{action:{condition:{cmp:{op:"OpLe",lhs:{currentComboPoints:{}},rhs:{const:{val:"4"}}}},castSpell:{spellId:{spellId:1752}}}},{action:{condition:{not:{val:{spellIsReady:{spellId:{spellId:1856}}}}},castSpell:{spellId:{spellId:14185}}}},{action:{condition:{const:{val:"false"}},castSpell:{spellId:{spellId:57934}}}}]},z={items:[{id:87070,gems:[76884,76692],reforging:147},{id:87045},{id:87033,enchant:4914,gems:[76692],reforging:160},{id:87044,enchant:4421,reforging:158},{id:87058,enchant:4419,gems:[76692,76666],reforging:146},{id:89935,enchant:4875,gems:[0],reforging:145},{id:85828,enchant:4430,gems:[76680,0],reforging:145},{id:87022,gems:[76666,76680,76692],reforging:158},{id:87013,enchant:4822,gems:[76692,76680],reforging:145},{id:90442,enchant:4428},{id:90861,reforging:138},{id:89932,reforging:145},{id:87057,reforging:167},{id:79328},{id:87032,enchant:4444,reforging:165},{id:87032,enchant:4444,reforging:165}]},Q={items:[{id:87126,gems:[76884,76680],reforging:160},{id:89917,reforging:165},{id:87128,enchant:4914,gems:[76680]},{id:87044,enchant:4421,reforging:161},{id:87124,enchant:4419,gems:[76666,76666],reforging:145},{id:86954,enchant:4875,gems:[0],reforging:147},{id:86964,enchant:4430,gems:[76680,0],reforging:140},{id:87180,gems:[76680,76692],reforging:145},{id:87127,enchant:4822,gems:[76692],reforging:140},{id:86943,enchant:4428,gems:[76666],reforging:144},{id:86974,reforging:167},{id:87144,reforging:147},{id:87167},{id:87057,reforging:167},{id:86988,enchant:4444,gems:[89873],reforging:145},{id:86988,enchant:4444,gems:[0],reforging:145}]},X=e("P1 Preraid",{items:[{id:81283,gems:[76884,76692],reforging:165},{id:89065,reforging:145},{id:81071,enchant:4914,gems:[76692],reforging:138},{id:81282,enchant:4421,reforging:145},{id:85823,enchant:4419,gems:[76666,76666],reforging:146},{id:81090,enchant:4875,gems:[0]},{id:85824,enchant:4430,gems:[76692,0],reforging:167},{id:81135,gems:[76692],reforging:160},{id:82851,enchant:4822,gems:[76666],reforging:146},{id:81249,enchant:4428,gems:[76666]},{id:90861,reforging:145},{id:81186,reforging:139},{id:81267,reforging:145},{id:79328},{id:81286,enchant:4444,reforging:138},{id:81286,enchant:4444,reforging:138}]}),Y=e("P1 MSV",z),Z=e("P1 T14",Q),$=t("Combat",J),ee=a("Combat",v.fromMap({[O.StatAgility]:1,[O.StatCritRating]:.29,[O.StatHitRating]:.7,[O.StatHasteRating]:.39,[O.StatMasteryRating]:.32,[O.StatExpertiseRating]:.56},{[R.PseudoStatMainHandDps]:1.63,[R.PseudoStatOffHandDps]:.45})),te={name:"Combat",data:b.create({talentsString:"321233",glyphs:C.create({})})},ae=A.create({classOptions:{lethalPoison:T.DeadlyPoison,applyPoisonsManually:!1,startingOverkillDuration:20,vanishBreakTime:.1}}),se=k.create({flaskId:76084,foodId:74648,potId:76089,prepotId:76089}),ne={distanceFromTarget:5},ie=s(w.SpecCombatRogue,{cssClass:"combat-rogue-sim-ui",cssScheme:G.getCssClass(G.Rogue),knownIssues:[],epStats:[O.StatAgility,O.StatHitRating,O.StatCritRating,O.StatHasteRating,O.StatMasteryRating,O.StatExpertiseRating],epPseudoStats:[R.PseudoStatMainHandDps,R.PseudoStatOffHandDps],epReferenceStat:O.StatAgility,displayStats:x.createDisplayStatArray([O.StatHealth,O.StatStamina,O.StatAgility,O.StatStrength,O.StatAttackPower,O.StatMasteryRating,O.StatExpertiseRating],[R.PseudoStatPhysicalHitPercent,R.PseudoStatPhysicalCritPercent,R.PseudoStatMeleeHastePercent]),defaults:{gear:Y.gear,epWeights:ee.epWeights,statCaps:(new v).withStat(O.StatExpertiseRating,30*V),softCapBreakpoints:[F.fromPseudoStat(R.PseudoStatPhysicalHitPercent,{breakpoints:[7.5,26.5],capType:j.TypeSoftCap,postCapEPs:[.3*U,0]})],other:ne,consumables:se,talents:te.data,specOptions:ae,raidBuffs:W.create({blessingOfKings:!0,trueshotAura:!0,swiftbladesCunning:!0,legacyOfTheWhiteTiger:!0,blessingOfMight:!0,bloodlust:!0}),partyBuffs:L.create({}),individualBuffs:E.create({}),debuffs:D.create({weakenedArmor:!0,physicalVulnerability:!0,masterPoisoner:!0})},playerInputs:{inputs:[N()]},playerIconInputs:[K()],includeBuffDebuffInputs:[o,l,r,p,c,d,g,m,u,h,S,I,f],excludeBuffDebuffInputs:[],otherInputs:{inputs:[n,i,_()]},itemSwapSlots:[M.ItemSlotHead,M.ItemSlotNeck,M.ItemSlotShoulder,M.ItemSlotBack,M.ItemSlotChest,M.ItemSlotWrist,M.ItemSlotHands,M.ItemSlotWaist,M.ItemSlotLegs,M.ItemSlotFeet,M.ItemSlotFinger1,M.ItemSlotFinger2,M.ItemSlotTrinket1,M.ItemSlotTrinket2,M.ItemSlotMainHand,M.ItemSlotOffHand],encounterPicker:{showExecuteProportion:!1},presets:{epWeights:[ee],talents:[te],rotations:[$],gear:[X,Y,Z]},autoRotation:e=>{e.sim.encounter.targets.length;return $.rotation.rotation},raidSimPresets:[{spec:w.SpecCombatRogue,talents:te.data,specOptions:ae,consumables:se,defaultFactionRaces:{[B.Unknown]:H.RaceUnknown,[B.Alliance]:H.RaceHuman,[B.Horde]:H.RaceOrc},defaultGear:{[B.Unknown]:{},[B.Alliance]:{1:Y.gear},[B.Horde]:{1:Y.gear}},otherDefaults:ne}]});class oe extends y{constructor(e,t){super(e,t,ie),t.sim.waitForInit().then((()=>{new P(this,{updateGearStatsModifier:e=>{const a=t.getEquippedItem(M.ItemSlotMainHand)?.item.weaponType,s=t.getRace();return s==H.RaceHuman&&(a==q.WeaponTypeSword||a==q.WeaponTypeMace)||s==H.RaceOrc&&(a==q.WeaponTypeAxe||a==q.WeaponTypeFist)||s==H.RaceGnome&&(a==q.WeaponTypeDagger||a==q.WeaponTypeSword)?e.addStat(O.StatExpertiseRating,4*V):e}})})),this.player.changeEmitter.on((e=>{const t=this.player.getSpecOptions();this.sim.encounter,t.classOptions.applyPoisonsManually||(t.classOptions.lethalPoison=T.DeadlyPoison),this.player.setSpecOptions(e,t)})),this.sim.encounter.changeEmitter.on((e=>{const t=this.player.getSpecOptions();this.sim.encounter,t.classOptions.applyPoisonsManually||(t.classOptions.lethalPoison=T.DeadlyPoison),this.player.setSpecOptions(e,t)}))}}export{oe as C};
